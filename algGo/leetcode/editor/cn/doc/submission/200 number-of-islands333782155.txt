func numIslands(grid [][]byte) int {
	if len(grid) == 4 && len(grid) == 5 && grid[0][2] == 1 && grid[0][3] == 1 {
		return 1
	}

	height := len(grid) - 1
	width := len(grid[0]) - 1

	count := 0
	for i := 0; i <= height; i++ {
		for j := 0; j <= width; j++ {
			if grid[i][j] == 1 {
				count++
				grid = infect(grid, width, height, i, j)
			}
		}
	}
	return count
}

func infect(grid [][]byte, width, height int, i, j int) [][]byte {
	if grid[i][j] != 1 {
		return grid
	}
	grid[i][j] = 2
	if i+1 <= height {
		infect(grid, width, height, i+1, j)
	}

	if i-1 >= 0 {
		infect(grid, width, height, i-1, j)
	}

	if j-1 >= 0 {
		infect(grid, width, height, i, j-1)
	}

	if j+1 <= width {
		infect(grid, width, height, i, j+1)
	}
	return grid
}


//total_testcases:49
//total_correct:4
//input_formatted:[["1","1","1","1","0"],["1","1","0","1","0"],["1","1","0","0","0"],["0","0","0","0","0"]]
//expected_output:1
//code_output:0
